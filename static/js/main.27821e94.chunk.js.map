{"version":3,"sources":["App/App.module.css","Dashboard/Dashboard.module.css","Dashboard/TransactionHistory/TransactionHistory.module.css","Dashboard/Balance/Balance.module.css","Dashboard/Controls/Controls.jsx","Dashboard/Balance/Balance.jsx","Dashboard/TransactionHistory/TransactionHistory.jsx","Dashboard/Dashboard.jsx","App/App.jsx","index.js","Dashboard/Controls/Controls.module.css"],"names":["module","exports","Controls","onDeposit","onWithdraw","className","styles","controls","input","type","name","buttons","onClick","Balance","balance","income","expenses","arrowUp","amount","arrowDown","defaultProps","TransactionHistory","items","length","history","head","column","body","map","item","key","id","date","Dashboard","state","transactions","notifyZeroOrLess","toast","error","notifyNotEnoughMoney","inputClear","e","target","parentNode","children","value","onTrans","transactionSum","Date","toLocaleString","newTrans","shortid","generate","setState","prevState","allIncome","allExpenses","count","filter","el","forEach","persistedTransactions","localStorage","getItem","this","JSON","parse","setItem","stringify","dashboard","position","POSITION","BOTTOM_LEFT","autoClose","Component","App","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27821e94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2GHCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2TKSj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__gceo8\",\"head\":\"TransactionHistory_head__3YaZ3\",\"column\":\"TransactionHistory_column__3G8Q6\",\"body\":\"TransactionHistory_body__3RP6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrowUp\":\"Balance_arrowUp__3-PJI\",\"arrowDown\":\"Balance_arrowDown__2WywD\",\"amount\":\"Balance_amount__33xgf\",\"balance\":\"Balance_balance__1ft8b\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst Controls = ({ onDeposit, onWithdraw }) => (\n  <section className={styles.controls}>\n    <input className={styles.input} type=\"number\" name=\"amount\" />\n    <button\n      className={styles.buttons}\n      type=\"button\"\n      name=\"Deposit\"\n      onClick={onDeposit}\n    >\n      Deposit\n    </button>\n    <button\n      className={styles.buttons}\n      type=\"button\"\n      name=\"Withdrawal\"\n      onClick={onWithdraw}\n    >\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => {\n  return (\n    <section className={styles.balance}>\n      <span className={styles.arrowUp}>&#8593;</span>\n      <span className={styles.amount}>{income}$</span>\n      <span className={styles.arrowDown}>&#8595;</span>\n      <span className={styles.amount}>{expenses}$</span>\n      <span>Balance: {balance}</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number,\n  expenses: PropTypes.number,\n};\n\nBalance.defaultProps = {\n  income: 0,\n  expenses: 0,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    items.length > 0 && (\n      <table className={styles.history}>\n        <thead className={styles.head}>\n          <tr>\n            <th className={styles.column}>TRANSACTION</th>\n            <th className={styles.column}>AMOUNT</th>\n            <th className={styles.column}>DATE</th>\n          </tr>\n        </thead>\n        <tbody className={styles.body}>\n          {items.map(item => (\n            <tr key={item.id}>\n              <td className={styles.column}>{item.type}</td>\n              <td className={styles.column}>{item.amount}$</td>\n              <td className={styles.column}>{item.date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nTransactionHistory.defaultProps = {\n  items: [],\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Dashboard.module.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n  };\n\n  componentDidMount() {\n    const persistedTransactions = localStorage.getItem('transactions');\n\n    if (persistedTransactions) {\n      this.setState({ transactions: JSON.parse(persistedTransactions) });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { transactions } = this.state;\n\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  notifyZeroOrLess = () => {\n    toast.error('Введите сумму для проведения операции!');\n  };\n\n  notifyNotEnoughMoney = () =>\n    toast.error('На счету недостаточно средств для проведения операции!');\n\n  inputClear = e => {\n    e.target.parentNode.children.amount.value = '';\n  };\n\n  onTrans = amount => {\n    const transactionSum = amount.target.parentNode.children.amount.value;\n    this.inputClear(amount);\n    if (transactionSum <= 0) {\n      return this.notifyZeroOrLess();\n    }\n    if (\n      amount.target.name === 'Withdrawal' &&\n      transactionSum > this.balance()\n    ) {\n      return this.notifyNotEnoughMoney();\n    }\n\n    const date = new Date().toLocaleString();\n\n    const newTrans = {\n      id: shortid.generate(),\n      type: `${amount.target.name}`,\n      amount: transactionSum,\n      date,\n    };\n\n    amount.target.name === 'Withdrawal'\n      ? this.setState(prevState => ({\n          transactions: [...prevState.transactions, newTrans],\n        }))\n      : this.setState(prevState => ({\n          transactions: [...prevState.transactions, newTrans],\n        }));\n\n    return transactionSum;\n  };\n\n  balance = () => {\n    return this.allIncome() - this.allExpenses();\n  };\n\n  allIncome = () => {\n    let count = 0;\n    this.state.transactions\n      .filter(el => el.type === 'Deposit')\n      .map(el => el.amount)\n      .forEach(el => (count += +el));\n    return count;\n  };\n\n  allExpenses = () => {\n    let count = 0;\n    this.state.transactions\n      .filter(el => el.type === 'Withdrawal')\n      .map(el => el.amount)\n      .forEach(el => (count += +el));\n    return count;\n  };\n\n  render() {\n    const allIncome = this.allIncome();\n    const allExpenses = this.allExpenses();\n    const balance = this.balance();\n\n    const { transactions } = this.state;\n\n    return (\n      <div className={styles.dashboard}>\n        <Controls onDeposit={this.onTrans} onWithdraw={this.onTrans} />\n        <Balance balance={balance} income={allIncome} expenses={allExpenses} />\n        <TransactionHistory items={transactions} />\n        <ToastContainer\n          position={toast.POSITION.BOTTOM_LEFT}\n          autoClose={3000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport styles from './App.module.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => (\n  <div className={styles.app}>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__pzYgH\",\"buttons\":\"Controls_buttons__1GTNr\",\"input\":\"Controls_input__2F6xX\"};"],"sourceRoot":""}